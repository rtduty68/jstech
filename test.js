//引用类型和基本类型
//1.基本类型的值是不可变得
//2.基本类型的比较是值的比较
//3.基本类型的变量是存放在栈区的（栈区指内存里的栈内存）
//1.引用类型的值是可变的
//2.引用类型的值是同时保存在栈内存和堆内存中的对象
//3.引用类型的比较是引用的比较
//对象引用
//当从一个变量向另一个变量赋值引用类型的值时，同样也会将存储在变量中的对象的值复制一份放到为新变量分配的空间中。前面讲引用类型的时候提到，
//保存在变量中的是对象在堆内存中的地址，所以，与简单赋值不同，这个值的副本实际上是一个指针，而这个指针指向存储在堆内存的一个对象。那么赋值操作后，
//两个变量都保存了同一个对象地址，则这两个变量指向了同一个对象。因此，改变其中任何一个变量，都会相互影响：
var bb = "456"; //基本类型
var dd = {
    a:1,
    b:2
};//引用类型


function test(sparam1
             ,sparam2)
{
    sparam1 = "123";
    sparam2.a=11;
    sparam2.b=22;
    console.log("sparam1 is " + sparam1);
    console.log("sparam2 is " + JSON.stringify(sparam2));
}

test(bb //传值
    ,dd);//传引用的值

console.log("bb is " + bb);
console.log("dd is " + JSON.stringify(dd)
